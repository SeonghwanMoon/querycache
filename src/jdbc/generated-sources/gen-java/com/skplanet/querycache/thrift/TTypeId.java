/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.skplanet.querycache.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum TTypeId implements org.apache.thrift.TEnum {
  UNKNOWN(0),
  UNSUPPORTED(1),
  BOOLEAN(2),
  TINYINT(3),
  SMALLINT(4),
  INT(5),
  BIGINT(6),
  FLOAT(7),
  DOUBLE(8),
  DATE(9),
  DATETIME(10),
  TIMESTAMP(11),
  STRING(12),
  BINARY(13),
  DECIMAL(14),
  CHAR(15),
  ARRAY(16),
  MAP(17),
  STRUCT(18),
  UNION(19),
  USER_DEFINED(20);

  private final int value;

  private TTypeId(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static TTypeId findByValue(int value) { 
    switch (value) {
      case 0:
        return UNKNOWN;
      case 1:
        return UNSUPPORTED;
      case 2:
        return BOOLEAN;
      case 3:
        return TINYINT;
      case 4:
        return SMALLINT;
      case 5:
        return INT;
      case 6:
        return BIGINT;
      case 7:
        return FLOAT;
      case 8:
        return DOUBLE;
      case 9:
        return DATE;
      case 10:
        return DATETIME;
      case 11:
        return TIMESTAMP;
      case 12:
        return STRING;
      case 13:
        return BINARY;
      case 14:
        return DECIMAL;
      case 15:
        return CHAR;
      case 16:
        return ARRAY;
      case 17:
        return MAP;
      case 18:
        return STRUCT;
      case 19:
        return UNION;
      case 20:
        return USER_DEFINED;
      default:
        return null;
    }
  }
}
