<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.phoenix</groupId>
  <artifactId>phoenix</artifactId>
  <version>2.2.4-incubating-SNAPSHOT</version>
  <name>Phoenix</name>
  <description>A SQL layer over HBase</description>

  <repositories>
    <repository>
      <id>codehaus</id>
      <name>Codehaus Public</name>
      <url>http://repository.codehaus.org/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>apache release</id>
      <url>https://repository.apache.org/content/repositories/releases/</url>
    </repository>
    <repository>
      <id>conjars.org</id>
      <url>http://conjars.org/repo</url>
    </repository>
  </repositories>

  <parent>
    <groupId>org.apache</groupId>
    <artifactId>apache</artifactId>
    <version>14</version>
  </parent>

  <scm>
    <connection>scm:git:http://git-wip-us.apache.org/repos/asf/incubator-phoenix.git</connection>
    <url>https://git-wip-us.apache.org/repos/asf/incubator-phoenix.git</url>
    <developerConnection>scm:git:https://git-wip-us.apache.org/repos/asf/incubator-phoenix.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <!-- General Properties -->
    <antlr-input.dir>src/main/antlr3</antlr-input.dir>
    <antlr-output.dir>target/generated-sources/antlr3</antlr-output.dir>
    <test.output.tofile>true</test.output.tofile>

    <!-- Dependency versions -->
    <hbase.version>0.94.12</hbase.version>
    <commons-cli.version>1.2</commons-cli.version>
    <hadoop.version>2.2.0</hadoop.version>
    <pig.version>0.11.0</pig.version>
    <jackson.version>1.8.8</jackson.version>
    <antlr.version>3.5</antlr.version>
    <opencsv.version>2.3</opencsv.version>
    <log4j.version>1.2.16</log4j.version>
    <slf4j-api.version>1.4.3.jar</slf4j-api.version>
    <slf4j-log4j.version>1.4.3</slf4j-log4j.version>
    <protobuf-java.version>2.5.0</protobuf-java.version>
    <commons-configuration.version>1.6</commons-configuration.version>
    <commons-io.version>2.1</commons-io.version>
    <commons-lang.version>2.5</commons-lang.version>
    <commons-logging.version>1.1.1</commons-logging.version>
    <sqlline.version>1.1.2</sqlline.version>
    <!--guava.version>12.0.1</guava.version-->
    <guava.version>11.0.2</guava.version>
    <jackson.version>1.8.8</jackson.version>

    <!-- Test Dependencies -->
    <mockito-all.version>1.8.5</mockito-all.version>
    <junit.version>4.11</junit.version>

    <!-- Plugin versions -->
    <maven-eclipse-plugin.version>2.8</maven-eclipse-plugin.version>
    <maven-build-helper-plugin.version>1.7</maven-build-helper-plugin.version>
    <maven-dependency-plugin.version>2.1</maven-dependency-plugin.version>

    <!-- Set default encoding so multi-byte tests work correctly on the Mac -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <targetPath>META-INF/services</targetPath>
        <includes>
          <include>java.sql.Driver</include>
        </includes>
      </resource>
    </resources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.0</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
          </configuration>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings only.
          It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                	<pluginExecutionFilter>
                		<groupId>org.antlr</groupId>
                		<artifactId>antlr3-maven-plugin</artifactId>
                		<versionRange>[3.5,)</versionRange>
                		<goals>
                			<goal>antlr</goal>
                		</goals>
                	</pluginExecutionFilter>
                	<action>
                		<ignore />
                	</action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Add the ant-generated sources to the source path -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${maven-build-helper-plugin.version}</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${antlr-output.dir}</source>
                <source>${antlr-input.dir}</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Compile the antlr sources -->
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr3-maven-plugin</artifactId>
        <version>3.5</version>
        <executions>
          <execution>
            <goals>
              <goal>antlr</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
			<outputDirectory>${antlr-output.dir}/org/apache/phoenix/parse</outputDirectory>
		</configuration>
      </plugin>
      <!-- Run with -Dmaven.test.skip.exec=true to build -tests.jar without running
        tests (this is needed for upstream projects whose tests need this jar simply for
        compilation) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <phase>prepare-package
            </phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <configuration>
              <archive>
                <manifest>
                  <mainClass>org.apache.phoenix.util.GeneratePerformanceData</mainClass>
                </manifest>
              </archive>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <!-- Exclude these 2 packages, because their dependency _binary_ files
            include the sources, and Maven 2.2 appears to add them to the sources to compile,
            weird -->
          <excludes>
            <exclude>org/apache/jute/**</exclude>
            <exclude>org/apache/zookeeper/**</exclude>
            <exclude>**/*.jsp</exclude>
            <exclude>log4j.properties</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Setup eclipse -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>${maven-eclipse-plugin.version}</version>
        <configuration>
          <buildcommands>
            <buildcommand>org.jamon.project.templateBuilder</buildcommand>
            <buildcommand>org.eclipse.jdt.core.javabuilder</buildcommand>
          </buildcommands>
        </configuration>
      </plugin>
      <!-- Build the final assembly for the phoenix-client jar -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>client</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <archive>
                <index>true</index>
                <manifest>
                  <addClasspath>true</addClasspath>
                  <mainClass>org.apache.phoenix.util.PhoenixRuntime</mainClass>
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                  <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                </manifest>
              </archive>
              <descriptors>
                <descriptor>src/build/client.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <!-- to build the tarball, this assembly:single needs to be called from
            the command line -->
          <execution>
            <id>package-to-tar</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>false</attach>
              <tarLongFileMode>gnu</tarLongFileMode>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>src/build/all.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-javadoc-plugin</artifactId>-->
        <!--<version>2.9</version>-->
        <!--<configuration>-->
          <!--<quiet>true</quiet>-->
          <!--<links>-->
            <!--<link>http://hbase.apache.org/apidocs/</link>-->
          <!--</links>-->
        <!--</configuration>-->
        <!--<executions>-->
          <!--<execution>-->
          <!--<id>attach-javadocs</id>-->
          <!--<goals>-->
            <!--<goal>jar</goal>-->
	  <!--</goals>-->
          <!--</execution>-->
        <!--</executions>-->
      <!--</plugin>-->
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.16</version>
          <configuration>
              <argLine>-enableassertions -Xmx2000m -Djava.security.egd=file:/dev/./urandom</argLine>
              <redirectTestOutputToFile>${test.output.tofile}</redirectTestOutputToFile>
          </configuration>
      </plugin>
    <!--<plugin>-->
      <!--<groupId>org.apache.maven.plugins</groupId>-->
      <!--<artifactId>maven-site-plugin</artifactId>-->
      <!--<version>3.2</version>-->
      <!--<dependencies>-->
        <!--<dependency>-->
          <!--<groupId>org.apache.maven.doxia</groupId>-->
          <!--<artifactId>doxia-module-markdown</artifactId>-->
          <!--<version>1.3</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
          <!--<groupId>lt.velykis.maven.skins</groupId>-->
          <!--<artifactId>reflow-velocity-tools</artifactId>-->
          <!--<version>1.0.0</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
          <!--<groupId>org.apache.velocity</groupId>-->
          <!--<artifactId>velocity</artifactId>-->
          <!--<version>1.7</version>-->
        <!--</dependency>-->
      <!--</dependencies>-->
      <!--<configuration>-->
        <!--<reportPlugins>-->
          <!--<plugin>-->
            <!--<groupId>org.codehaus.mojo</groupId>-->
            <!--<artifactId>findbugs-maven-plugin</artifactId>-->
	        <!--<version>2.5.2</version>-->
          <!--</plugin>-->
        <!--</reportPlugins>-->
      <!--</configuration>-->
    <!--</plugin>-->
    <!--<plugin>-->
      <!--<artifactId>exec-maven-plugin</artifactId>-->
      <!--<groupId>org.codehaus.mojo</groupId>-->
      <!--<version>1.2.1</version>-->
      <!--<executions>-->
        <!--<execution>&lt;!&ndash; Run our version calculation script &ndash;&gt;-->
          <!--<id>Merge Language Reference</id>-->
          <!--<phase>site</phase>-->
          <!--<goals>-->
            <!--<goal>exec</goal>-->
          <!--</goals>-->
          <!--<configuration>-->
            <!--<executable>${basedir}/src/site/bin/merge.sh</executable>-->
          <!--</configuration>-->
        <!--</execution>-->
      <!--</executions>-->
    <!--</plugin>-->
    </plugins>
  </build>

  <dependencies>
    <!-- Make sure we have all the antlr dependencies -->
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr</artifactId>
      <version>${antlr.version}</version>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <version>${antlr.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>${opencsv.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.pig</groupId>
      <artifactId>pig</artifactId>
      <version>${pig.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <version>${hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
      <version>2.11</version>
    </dependency>
    <dependency>
      <groupId>sqlline</groupId>
      <artifactId>sqlline</artifactId>
      <version>${sqlline.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    
    <!-- Test Dependencies -->
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <version>${hbase.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Needed by HBase to run the minicluster -->
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <version>${jackson.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>${jackson.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
      <version>${jackson.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>
      <version>${jackson.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${mockito-all.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Findbugs Annotation -->
    <dependency>
      <groupId>net.sourceforge.findbugs</groupId>
      <artifactId>annotations</artifactId>
      <version>1.3.2</version>
    </dependency>

  </dependencies>

  <profiles>

    <!--
      Profile for building against Hadoop 1. Active by default.
      Not used if another Hadoop profile is specified with
        mvn -Dhadoop.profile=foo
    -->
    <profile>
      <id>hadoop-1</id>
      <activation>
        <property>
          <name>!hadoop.profile</name>
	</property>
      </activation>
      <dependencies>
	<dependency>
	  <groupId>org.apache.hadoop</groupId>
	  <artifactId>hadoop-core</artifactId>
	  <version>${hadoop.version}</version>
	  <optional>true</optional>
	  <exclusions>
	    <exclusion>
	      <groupId>hsqldb</groupId>
	      <artifactId>hsqldb</artifactId>
	    </exclusion>
	    <exclusion>
	      <groupId>net.sf.kosmosfs</groupId>
	      <artifactId>kfs</artifactId>
	    </exclusion>
	    <exclusion>
	      <groupId>org.eclipse.jdt</groupId>
	      <artifactId>core</artifactId>
	    </exclusion>
	    <exclusion>
	      <groupId>net.java.dev.jets3t</groupId>
	      <artifactId>jets3t</artifactId>
	    </exclusion>
	    <exclusion>
	      <groupId>oro</groupId>
	      <artifactId>oro</artifactId>
	    </exclusion>
	  </exclusions>
	</dependency>
	<dependency>
	  <groupId>org.apache.hadoop</groupId>
	  <artifactId>hadoop-test</artifactId>
	  <version>${hadoop.version}</version>
	  <optional>true</optional>
	  <scope>test</scope>
	</dependency>
      </dependencies>
    </profile>

    <!--
      Profile for building against Hadoop 2. Activate using:
        mvn -Dhadoop.profile=2
    -->
    <profile>
      <id>hadoop-2</id>
      <activation>
        <property>
          <name>hadoop.profile</name>
          <value>2</value>
        </property>
      </activation>
      <properties>
        <hadoop.version>2.2.0</hadoop.version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
          <version>${hadoop.version}</version>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-annotations</artifactId>
          <version>${hadoop.version}</version>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-mapreduce-client-core</artifactId>
          <version>${hadoop.version}</version>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-minicluster</artifactId>
          <version>${hadoop.version}</version>
	  <optional>true</optional>
	  <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
	<plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
	    <version>${maven-dependency-plugin.version}</version>
            <executions>
              <execution>
                <id>create-mrapp-generated-classpath</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>build-classpath</goal>
                </goals>
                <configuration>
                  <outputFile>${project.build.directory}/classes/mrapp-generated-classpath</outputFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
	</plugins>
      </build>

    </profile>
    
  </profiles>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments />
        </license>
    </licenses>

    <organization>
        <name>Apache Software Foundation</name>
        <url>http://www.apache.org</url>
    </organization>

</project>
